{"version":3,"file":"static/js/248.f0094ff7.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/AddContactForm/AddContactForm.styled.js","components/AddContactForm/AddContactForm.jsx","pages/Home.jsx","redux/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  border-radius: 8px;\n  padding: 40px 20px;\n\n  background-color: var(--white-color);\n  box-shadow: var(--box-shadow);\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 28px;\n\n  text-align: center;\n  font-size: 24px;\n  line-height: 1.17;\n  letter-spacing: -0.96px;\n  text-transform: uppercase;\n`;\n","import PropTypes from 'prop-types';\nimport { Title, Wrapper } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Wrapper>\n      <Title>{title}</Title>\n      {children}\n    </Wrapper>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n};\n","import styled from 'styled-components';\nimport { Field } from 'formik';\nimport { AiOutlineUser } from 'react-icons/ai';\nimport { BsTelephone } from 'react-icons/bs';\n\nexport const ContactLabel = styled.label`\n  display: block;\n\n  margin-bottom: 28px;\n\n  font-weight: 700;\n`;\n\nexport const WrapperInput = styled.div`\n  position: relative;\n\n  transition: color var(--transition-duration) var(--transition-timing-function);\n\n  &:has(input:focus) {\n    color: var(--blue-color);\n  }\n`;\n\nexport const ContactInput = styled(Field)`\n  display: block;\n\n  width: 100%;\n  border-radius: 8px;\n  border: 1px solid var(--text-black-color);\n  padding: 8px 16px 8px 32px;\n  margin-top: 8px;\n\n  outline: 2px solid transparent;\n\n  transition: border-color var(--transition-duration)\n      var(--transition-timing-function),\n    outline-color var(--transition-duration) var(--transition-timing-function);\n\n  &:focus {\n    border-color: transparent;\n    outline-color: var(--blue-color);\n  }\n`;\n\nexport const NameInputIcon = styled(AiOutlineUser)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n`;\n\nexport const NumberInputIcon = styled(BsTelephone)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n`;\n\nexport const SubmitButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  min-width: 140px;\n  border-radius: 18px;\n  border: 2px solid var(--blue-color);\n  padding: 8px 16px;\n  margin: 0 auto;\n\n  color: var(--blue-color);\n  background-color: transparent;\n\n  transition: color var(--transition-duration)\n  var(--transition-timing-function), background-color var(--transition-duration)\n  var(--transition-timing-function);\n\n  &:is(:hover, :focus, :active) {\n  color: var(--white-color);\n  background-color: var(--blue-color);\n`;\n\nexport const Error = styled.p`\n  padding: 4px;\n\n  font-weight: 500;\n\n  color: var(--error-color);\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\nimport { toast } from 'react-hot-toast';\nimport { IoMdPersonAdd } from 'react-icons/io';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\nimport {\n  ContactInput,\n  ContactLabel,\n  Error,\n  NameInputIcon,\n  NumberInputIcon,\n  SubmitButton,\n  WrapperInput,\n} from './AddContactForm.styled';\n\nconst contactSchema = object({\n  name: string()\n    .required('This field is required!')\n    .matches(\n      \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]?[- ']*)*$\",\n      `Name may contain only letters, apostrophe, dash and spaces.\n      For example Adrian, Jacob Mercer Charles de Batz de Castelmore d'Artagnan`\n    )\n    .min(\n      2,\n      'The name is short! Please enter a name with at least 2 characters.'\n    )\n    .trim(),\n  number: string()\n    .required('This field is required!')\n    .matches(\n      /^(\\+?\\d+)?\\s*(\\(\\d+\\))?[\\s-]*([\\d-]*)$/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +.'\n    )\n    .min(\n      5,\n      'The number is short! Please enter a number with at least 5 characters.'\n    )\n    .max(\n      18,\n      'The number is long! Please enter a number with at more 18 characters.'\n    ),\n});\n\nexport const AddContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onSubmit = ({ name, number }, { resetForm }) => {\n    const isIncludesName = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    const isIncludesNumber = contacts.find(\n      contact => contact.number === number\n    );\n\n    if (isIncludesName || isIncludesNumber) {\n      const warningText = `${\n        isIncludesName ? name : `Number ${number}`\n      } is already in contacts`;\n\n      toast.remove();\n      toast.error(warningText);\n\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      onSubmit={onSubmit}\n      validationSchema={contactSchema}\n    >\n      <Form>\n        <ContactLabel>\n          Name\n          <WrapperInput>\n            <ContactInput\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"First name Last name\"\n            />\n            <NameInputIcon size={18} />\n          </WrapperInput>\n          <ErrorMessage name=\"name\" component={Error} />\n        </ContactLabel>\n\n        <ContactLabel>\n          Number\n          <WrapperInput>\n            <ContactInput type=\"tel\" name=\"number\" placeholder=\"000-00-00\" />\n            <NumberInputIcon />\n          </WrapperInput>\n          <ErrorMessage name=\"number\" component={Error} />\n        </ContactLabel>\n\n        <SubmitButton type=\"submit\">\n          <IoMdPersonAdd size={20} />\n          Add contact\n        </SubmitButton>\n      </Form>\n    </Formik>\n  );\n};\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport toast from 'react-hot-toast';\nimport { selectIsLoading } from 'redux/selectors';\nimport { Section } from 'components/Section/Section';\nimport { AddContactForm } from 'components/AddContactForm/AddContactForm';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Home = () => {\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    return () => {\n      toast.remove();\n    };\n  }, []);\n\n  return (\n    <main>\n      <Section title=\"Phonebook\">\n        <AddContactForm />\n      </Section>\n\n      {isLoading && <Loader />}\n    </main>\n  );\n};\n\nexport default Home;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterValue = state => state.filter.value;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filter) => {\n    return contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n        contact.number.includes(filter)\n    );\n  }\n);\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","Section","_ref","title","children","_jsxs","_jsx","ContactLabel","WrapperInput","ContactInput","Field","_templateObject3","NameInputIcon","AiOutlineUser","_templateObject4","NumberInputIcon","BsTelephone","_templateObject5","SubmitButton","_templateObject6","Error","_templateObject7","contactSchema","object","name","string","required","matches","min","trim","number","max","AddContactForm","contacts","useSelector","selectContacts","dispatch","useDispatch","Formik","initialValues","onSubmit","_ref2","resetForm","isIncludesName","find","contact","toLowerCase","isIncludesNumber","warningText","concat","toast","addContact","validationSchema","Form","type","placeholder","size","ErrorMessage","component","IoMdPersonAdd","isLoading","selectIsLoading","useEffect","Loader","state","items","selectError","error","selectFilterValue","filter","value","selectFilteredContacts","createSelector","includes"],"sourceRoot":""}